/*
 * I2C_Interface.h
 *
 *  Created on: Dec 3, 2021
 *      Author: naser
 */

#ifndef I2C_INTERFACE_H_
#define I2C_INTERFACE_H_

#include"STD_TYPES.h"
#include"BIT_MATH.h"
/*******************************************************************************************
 *
 * 						Initialization for Master
 *
 *******************************************************************************************/
void I2C_Master_VoidInit(u8 Copy_u8SlaveAddress);

/*******************************************************************************************
 *
 * 						Initialization for Slave
 *
 *******************************************************************************************/
void I2C_Slave_VoidInit(u8 Copy_u8SlaveAddress);


/*******************************************************************************************
 *
 * 						Function for start of condition
 *
 *******************************************************************************************/
void I2C_VoidStartCondition(void);


/*******************************************************************************************
 *
 * 						Function for stop of condition
 *
 *******************************************************************************************/
void I2C_VoidStopCondition(void);

/*******************************************************************************************
 *
 * 						Function for the repeated start
 *
 *******************************************************************************************/
void I2C_VoidRepeatedStart(void);

/*******************************************************************************************
 *
 * 						Function to read the slave address
 *
 *******************************************************************************************/
void I2C_VoidSendSlaveAddress_Read(u8 Copy_u8SlaveAddress);

/*******************************************************************************************
 *
 * 						Function to write the slave address
 *
 *******************************************************************************************/
void I2C_VoidSendSlaveAddress_Write(u8 Copy_u8SlaveAddress);

/*******************************************************************************************
 *
 * 						Refresh function for the watch dog timer
 *
 *******************************************************************************************/
u8 I2C_VoidReadData(void);


/*******************************************************************************************
 *
 * 						Refresh function for the watch dog timer
 *
 *******************************************************************************************/
void I2C_VoidWriteData(u8 Copy_Data);

/*******************************************************************************************
 *
 * 						Refresh function for the watch dog timer
 *
 *******************************************************************************************/
void I2C_VoidMasterSendData(void);

/*******************************************************************************************
 *
 * 						Refresh function for the watch dog timer
 *
 *******************************************************************************************/
void I2C_VoidMasterReadData(void);

/*******************************************************************************************
 *
 * 						Refresh function for the watch dog timer
 *
 *******************************************************************************************/
void I2C_VoidSlaveSendData(u8 Copy_u8Data);
/*******************************************************************************************
 *
 * 						Function to send the repeated start condition and start the transmit
 *
 *******************************************************************************************/
void I2C_VoidRepeatedStart(void);

/*******************************************************************************************
 *
 * 						Function to check the status of the register and I2C
 *
 *******************************************************************************************/
u8 I2C_u8CheckStatus(u8 Copy_u8Status);

#endif /* I2C_INTERFACE_H_ */
